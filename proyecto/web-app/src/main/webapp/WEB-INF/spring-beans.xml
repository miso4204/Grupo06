<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	<aop:aspectj-autoproxy />
    <bean id="tasaCambio" class="grupo6.web.aspectos.TasaCambioAspect" />

	<!-- Escanea clases con anotaciones de Spring de backend (ej: @Service, @Repository etc)  y crea un bean por cada clase anotada -->
	<context:component-scan base-package="grupo6" />
	<!-- Escanea clases con anotaciones de Spring de frontend. Ej: @Controller -->
	<mvc:annotation-driven />
	
	<!-- Fabrica de buscadores de productos  -->
	<bean id="busquedaProductosFactory" class="grupo6.modulo.product.factory.BusquedaProductosFactory">
		<property name="buscadores">
			<map>
				<entry key="busquedaProductoFecha" value-ref="busquedaProductoFecha" />
				<entry key="busquedaProductoPrecio" value-ref="busquedaProductoPrecio" />
				<entry key="busquedaProductoUbicacion" value-ref="busquedaProductoUbicacion" />
			</map>
		</property>
	</bean>
	
	<bean id="propertyConfigurer" 
  			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
   		 <property name="location" value="classpath:web.properties" />
	</bean> 
	
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<beans:property name="prefix" value="/WEB-INF/pages/" />
			<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Crea el datasource hacia la BD en memoria -->
	<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:memory-db" />
		<property name="username" value="sa" />
		<property name="password" value="" />		
	</bean>

	<!-- Hibernate Session Factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="packagesToScan">
			<array>
				<value>grupo6.persistencia.entidades</value>
			</array>
		</property>
		<property name="hibernateProperties">			
			<props>
            	 <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>              
		         <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
		         <prop key="hibernate.cache.use_second_level_cache">false</prop>
		         <prop key="hibernate.cache.use_query_cache">false</prop>	
		         <prop key="hibernate.hbm2ddl.auto">create</prop>	         
		         <prop key="hibernate.show_sql">false</prop>
		         <prop key="hibernate.format_sql">true</prop>
		         <prop key="hibernate.default_schema">public</prop>
             </props>
		</property>
	</bean>

	<!-- Hibernate Transaction Manager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- Activa la transacionalidad basada en anotaciÃ³n @Transactional -->
	<tx:annotation-driven transaction-manager="transactionManager" />	
	
</beans>